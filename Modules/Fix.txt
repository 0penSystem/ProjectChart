Attribute VB_Name = "Fix"
Option Compare Database

Public ProjectStart As Date, ProjectEnd As Date
Public SlideWidth As Integer
Public FilePath As String

Public APP As Events


Public Sub FixSlide(ProjectID As Integer, Optional Timescale As String = "q")
    'We want to adjust each bar to it's proper timeline position
    Dim Rec As Recordset
    Dim Rec2 As Recordset
    Dim AppPPT As Object
    Dim PPT As Object

    Set Rec = GetBars(ProjectID)
    Set Rec2 = GetEvents(ProjectID)
    'killFile (filepath)
    Set AppPPT = OpenPPT(Rec)
    
    Set PPT = OpenPresentation(AppPPT, Rec)
    SlideWidth = PPT.SlideMaster.Width
    
    FixTimescale PPT, Rec, Timescale
    FixBars PPT, Rec
    FixEvents PPT, Rec2
    
    Do Until AppPPT.Windows.Count = 0
        DoEvents
    Loop
    
   
    
    killFile (FilePath)
    'SavePPT PPT, AppPPT, Rec
End Sub

Function OpenPresentation(AppPPT As Object, Rec As Recordset) As Object
    'AppPPT.Presentations.Open(Rec.Fields("FilePath"), ReadOnly:=False)
    Rec.Edit
   
    'get attachment field
    Attach = Rec.Fields("PowerPointFile")
    
    Dim FilePath As String
    FilePath = Environ("TEMP") & "\chartmaker.ppt"
    
    'is there already an attachment?
    If (Attach.BOF) Then
        'No, make one
        Set Pres = AppPPT.Presentations.Add
        Set Slide = Pres.Slides.Add(1, ppLayoutBlank)
        
             
        With Pres
            .SaveAs FilePath
        End With
        
        Attach.AddNew
        Attach.Fields("FileData").LoadFromFile FilePath
        Attach.Update
        
        Rec.Update
        
        Set OpenPresentation = Pres
        GoTo Endf
    End If
    
    On Error GoTo Alternate
    Set OpenPresentation = AppPPT.Presentations.Open(FilePath, msoFalse)
    On Error GoTo 0
    GoTo Endf

Alternate:
        Attach.Fields("FileData").SaveToFile FilePath
        Set OpenPresentation = AppPPT.Presentations.Open(FilePath, msoFalse)
    
    
        
Endf:
    
    
End Function

Sub killFile(fp As String)
With New FileSystemObject
    If .FileExists(fp) Then
        .DeleteFile fp
    End If
    End With
End Sub

Sub SavePPT2(PPT As Object, AppPPT As Object, Rec As Recordset)
   Dim FilePath As String
   
   Rec.MoveFirst
   FilePath = Environ("TEMP") & "\chartmaker.ppt"
   Rec.Edit
   
   Attach = Rec.Fields("PowerPointFile")
   
   With Attach
   .MoveFirst
   .Edit
   .Fields("FileData").LoadFromFile FilePath
   .Update
   End With
   
   Rec.Update
   
   Set PPT = Nothing
   Set AppPPT = Nothing
   
   With New FileSystemObject
    If .FileExists(FilePath) Then
        .DeleteFile FilePath
    End If
    End With
End Sub

Function DateToPoint(DateIn As Date) As Integer
    DTPConstant = SlideWidth / DateDiff("d", ProjectStart, ProjectEnd)
    DateToPoint = DateDiff("d", ProjectStart, DateIn) * DTPConstant
End Function

Function OpenPPT(Rec As Recordset) As Object
    'Returns an opened PPT app
    Set APP = New Events
    FilePath = Environ("TEMP") & "\chartmaker.ppt"
    APP.fp = FilePath
    Set APP.Rec = Rec
    
    
    'AppPPT.Visible = True 'TODO: set false?
    Set OpenPPT = APP.APP
    
    
End Function

Function GetBars(ProjectID As Integer) As Recordset
'Gather all requisite data from the database
    Dim DB As Database
    Dim SQL As String
    SQL = "SELECT Projects.*, Bars.* FROM Projects INNER JOIN Bars ON Projects.ProjectID = Bars.ProjectID WHERE (((Projects.ProjectID)=" & ProjectID & "));"
    
     
    Set DB = CurrentDb
    
    Set GetBars = DB.OpenRecordset(SQL)
    
End Function

Function GetEvents(ProjectID As Integer) As Recordset
'Gather all requisite data from the database
    Dim DB As Database
    Dim SQL As String
    SQL = "SELECT Projects.*, Events.*, Projects.ProjectID FROM Projects INNER JOIN Events ON Projects.ProjectID = Events.ProjectID WHERE (((Projects.ProjectID)=" & ProjectID & "));"
 
     
    Set DB = CurrentDb
    
    Set GetEvents = DB.OpenRecordset(SQL)
    
End Function

Sub FixTimescale(PPT As Object, Rec As Recordset, Timescale As String)
    'what timescale is it?
    Dim StartDate As Date
    Dim EndDate As Date
    'StartDate = "8/12/2016"
    'EndDate = "8/12/2028"
    
    
    
    With Rec
        StartDate = .Fields("Projects.StartDate")
        EndDate = .Fields("Projects.EndDate")
    End With
    
    ProjectStart = StartDate
    ProjectEnd = EndDate
    
    'Change "q" to a string var to let the user pick the timescale later
    Diff = DateDiff(Timescale, StartDate, EndDate)
   
    
    
    BoxWidth = PPT.SlideMaster.Width / (Diff + 1)
    
    
    
    Set myDocument = PPT.Slides(1)
    For i = 0 To Diff
        'check shapes and make them happy again
        With myDocument.Shapes("Timescale_" & i)
            
            .Left = (i * BoxWidth)
            .Width = BoxWidth
            
            'Not sure I should change these?
            .Top = 20
            .Height = 20
        End With
        
    Next i
    
End Sub

Sub FixBars(PPT As Object, Rec As Recordset)
    Dim StartDate As Date, EndDate As Date

    Set myDocument = PPT.Slides(1)
 
    
    
    
    'for each bar, do....
    With Rec
      Do While Not .EOF
         'Make a bar!
           
          With Rec
                StartDate = .Fields("Bars.StartDate")
                EndDate = .Fields("Bars.EndDate")
                BarID = .Fields("BarID")
          End With
          
          
    
         
         
         'How wide does the bar need to be?
         BarWidth = DateToPoint(EndDate) - DateToPoint(StartDate)
         
          With myDocument.Shapes("Bar_" & BarID)
            .Left = DateToPoint(StartDate)
            .Width = BarWidth
          End With
    
         .MoveNext
      Loop
   End With
End Sub

Sub FixEvents(PPT As Object, Rec As Recordset)
    Dim EventDate As Date
    
    Set myDocument = PPT.Slides(1)
 

    
    
    
    With Rec     'go through each event
        Do While Not .EOF
            With Rec
                EventName = .Fields("EventName")
                EventDate = .Fields("EventDate")
                EventID = .Fields("EventID")
                BarID = .Fields("BarID")
            End With
            
            'crappy defaults
            
            EventLeft = DateToPoint(EventDate) - (myDocument.Shapes("Event_" & EventID).Width / 2)
            
                
            
            With myDocument.Shapes("Event_" & EventID)
                .Left = EventLeft
                If Not IsNull(BarID) Then
                    .Top = myDocument.Shapes("Bar_" & BarID).Top - myDocument.Shapes("Event_" & EventID).Height
                    End If
            End With
    
             .MoveNext
        Loop
    End With
    
End Sub
